<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thoughtworks.lean.sonar.aggreagtedreport.dao.TestStepMapper">

    <sql id="stepColumns">
        step.id as id,
        step.scenario_id as scenarioId,
        step.name as name,
        step.duration as duration,
        step.result as resultType
    </sql>

    <select id="get" parameterType="java.lang.Long" resultType="TestStep">
        SELECT
        <include refid="stepColumns"/>
        FROM lean_test_step step
        <where>
            AND step.id=#{id}
        </where>
    </select>

    <select id="getByParentId" parameterType="java.lang.Long" resultType="TestStep">
        SELECT
        <include refid="stepColumns"/>
        FROM lean_test_step step
        <where>
            AND step.scenario_id=#{parentId}
        </where>
    </select>

    <select id="selectByScenarioIDs" parameterType="java.util.List" resultType="TestStep">
        SELECT
        <include refid="stepColumns"/>
        FROM lean_test_step step
        <where>
            AND step.scenario_id IN #{scenarioIDs}
        </where>
    </select>

    <select id="selectAll" resultType="TestStep">
        select
        <include refid="stepColumns"/>
        from
        `lean_test_step` as step;
    </select>

    <insert id="insert" parameterType="TestStep" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO lean_test_step (name, scenario_id, result, duration)
        VALUES (#{name,jdbcType=VARCHAR}, #{scenarioId,jdbcType=INTEGER}, #{resultType.name,jdbcType=VARCHAR},#{duration,jdbcType=INTEGER});
    </insert>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM lean_test_step WHERE id=#{id}
    </delete>

    <delete id="deleteAll">
        DELETE FROM lean_test_step WHERE true
    </delete>

    <update id="update" parameterType="TestStep">
        UPDATE lean_test_step
        SET
            scenario_id = #{scenarioId,jdbcType=INTEGER},
            name = #{name,jdbcType=VARCHAR},
            duration = #{duration,jdbcType=INTEGER},
            result = #{resultType,jdbcType=VARCHAR}
        <where>
            AND id = #{id,jdbcType=INTEGER}
        </where>
    </update>

</mapper>
